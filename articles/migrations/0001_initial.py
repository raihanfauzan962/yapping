# Generated by Django 5.1.4 on 2025-01-12 07:30

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter the title of the article.', max_length=255, verbose_name='Article Title')),
                ('content', models.TextField(help_text='Write the main content of the article.', verbose_name='Content')),
                ('image', models.ImageField(blank=True, help_text='Upload an optional image for the article.', null=True, upload_to='articles/', verbose_name='Image')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time when the article was created.', verbose_name='Created At')),
                ('edited_at', models.DateTimeField(auto_now=True, help_text='The date and time when the article was last edited.', verbose_name='Last Edited At')),
                ('is_published', models.BooleanField(default=False, help_text='Check this box to make the article visible to users.', verbose_name='Published')),
                ('author', models.ForeignKey(help_text='The author of this article.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'verbose_name': 'Article',
                'verbose_name_plural': 'Articles',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserRecording',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio_file', models.FileField(help_text='Upload the audio file for evaluation.', upload_to='recordings/', verbose_name='Audio File')),
                ('pronunciation_score', models.FloatField(blank=True, help_text='The calculated pronunciation score for the recording.', null=True, verbose_name='Pronunciation Score')),
                ('feedback', models.TextField(blank=True, help_text='The feedback provided for the recording.', null=True, verbose_name='Feedback')),
                ('submitted_at', models.DateTimeField(auto_now_add=True, help_text='The date and time when the recording was submitted.', verbose_name='Submitted At')),
                ('article', models.ForeignKey(help_text='The article associated with this recording.', on_delete=django.db.models.deletion.CASCADE, related_name='user_recordings', to='articles.article', verbose_name='Article')),
                ('user', models.ForeignKey(help_text='The user who uploaded the recording.', on_delete=django.db.models.deletion.CASCADE, related_name='user_recordings', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pronunciation_score', models.FloatField(blank=True, help_text='Score for pronunciation (0-10).', null=True, verbose_name='Pronunciation Score')),
                ('intonation_score', models.FloatField(blank=True, help_text='Score for intonation (0-10).', null=True, verbose_name='Intonation Score')),
                ('fluency_score', models.FloatField(blank=True, help_text='Score for fluency (0-10).', null=True, verbose_name='Fluency Score')),
                ('overall_score', models.FloatField(blank=True, help_text='Automatically calculated as the average of other scores.', null=True, verbose_name='Overall Score')),
                ('comments', models.TextField(help_text="Evaluator's comments for the feedback.", verbose_name='Comments')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time when the feedback was created.', verbose_name='Created At')),
                ('modified_at', models.DateTimeField(auto_now=True, help_text='The date and time when the feedback was last modified.', verbose_name='Last Modified At')),
                ('evaluator', models.ForeignKey(help_text='The evaluator providing this feedback.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feedbacks', to=settings.AUTH_USER_MODEL, verbose_name='Evaluator')),
                ('recording', models.OneToOneField(help_text='The recording associated with this feedback.', on_delete=django.db.models.deletion.CASCADE, related_name='feedback_recording', to='articles.userrecording', verbose_name='Recording')),
            ],
            options={
                'verbose_name': 'Feedback',
                'verbose_name_plural': 'Feedbacks',
            },
        ),
    ]
